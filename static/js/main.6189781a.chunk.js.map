{"version":3,"sources":["serviceWorker.ts","redux/actions/alertActions.ts","data/messages.ts","core/cacheService/localStorage.ts","redux/actions/labelActions.ts","redux/actions/uiActions.ts","redux/actions/issueActions.ts","redux/actions/repoActions.ts","components/TopLevel/Alert.tsx","components/MainContent/InstructionScreen/StepInstruction/StepInstruction.tsx","components/MainContent/InstructionScreen/InstructionScreen.tsx","shared/FlexContainer.tsx","shared/LoadingSpinner.tsx","shared/SectionTitle.tsx","core/helpers.ts","shared/Badge.tsx","components/MainContent/IssueDetails/IssueCommentsBadge.tsx","components/MainContent/IssueDetails/IssueDetails.tsx","components/MainContent/IssueList/IssueList.tsx","components/MainContent/MainContent.tsx","shared/Divider.tsx","components/SideMenu/SideMenuSection.tsx","components/SideMenu/LabelSection/LabelBadge/LabelBadge.tsx","components/SideMenu/LabelSection/LabelList/LabelList.tsx","components/SideMenu/LabelSection/LabelSectionEmpty/LabelSectionEmpty.tsx","shared/CircularButton.tsx","components/SideMenu/LabelSection/LabelSectionHeader/LabelSectionHeader.tsx","components/SideMenu/LabelSection/LabelSection.tsx","shared/StyledInput.tsx","components/SideMenu/RepoSection/AddRepoForm/AddRepoForm.tsx","components/SideMenu/RepoSection/RepoItem/RepoItem.tsx","components/SideMenu/RepoSection/RepoList/RepoList.tsx","components/SideMenu/RepoSection/UserMenu/UserMenu.tsx","components/SideMenu/RepoSection/RepoSection.tsx","components/SideMenu/SideMenu.tsx","App.tsx","redux/reducers/alertReducer.ts","redux/reducers/issueReducer.ts","redux/reducers/labelReducer.ts","redux/reducers/repoReducer.ts","redux/reducers/uiReducer.ts","redux/reducers/index.ts","redux/store/index.ts","index.tsx"],"names":["Boolean","window","location","hostname","match","SET_ALERT","HIDE_ALERT","setAlert","text","type","payload","hideAlert","MESSAGES","errorGeneric","repositoryNotFound","localStorageService","key","serializedReposData","localStorage","getItem","concat","JSON","parse","_unused","data","stringifiedState","stringify","setItem","_unused2","repoName","removeItem","err","repoToBeDeleted","reposUpdated","this","loadFromCache","filter","repo","saveToCache","_unused3","LABEL_REQUEST_START","LABEL_REQUEST_END","SET_LABELS","DELETE_LABELS","requestStart","requestEnd","setLabels","labels","deleteLabels","fetchLabels","refreshCache","arguments","length","undefined","dispatch","savedData","cacheService","Promise","resolve","fetchLabelsFromApi","then","response","parsedResponseData","map","color","name","error","status","console","log","axios","get","SELECT_LABEL","SELECT_REPO","selectRepo","selectLabel","labelName","label","ISSUE_REQUEST_START","ISSUE_REQUEST_END","GET_ISSUES","DELETE_ISSUES","deleteIssues","getIssuesOfRepo","issues","fetchIssues","comments","created_at","title","updated_at","url","html_url","ADD_REPO","DELETE_REPO","addRepo","getState","Array","from","repos","deleteRepo","deleteRepoFromStorage","deleteLabelCache","StyledAlert","styled","div","_templateObject","props","AlertIcon","_templateObject2","AlertContent","_templateObject3","AlertHeader","h3","_templateObject4","CloseButtonContainer","_templateObject5","connect","state","alert","alertActions","_ref","isOn","react_default","a","createElement","react_fontawesome_index_es","icon","faExclamation","faInfo","faCheck","data-testid","onClick","faTimes","StyledStep","StepInstruction_templateObject","StyledStepContent","StepInstruction_templateObject2","StyledStepNumber","StepInstruction_templateObject3","StyledStepTitle","StepInstruction_templateObject4","StyledStepDetails","StepInstruction_templateObject5","StepInstruction","i","instruction","example","StyledInstructionScreen","InstructionScreen_templateObject","InstructionScreen","instructions","InstructionScreen_StepInstruction_StepInstruction","defaultProps","FlexContainer","FlexContainer_templateObject","alignItems","margin","justifyContent","flexDirection","rotate","keyframes","LoadingSpinner_templateObject","LoadingSpinner","LoadingSpinner_templateObject2","SectionTitle","SectionTitle_templateObject","formatTime","time","datetime","Date","year","getFullYear","month","appendLeadingZeroes","getMonth","day","getDate","n","Badge","Badge_templateObject","active","StyledIssueCommentsBadge","IssueCommentsBadge_templateObject","StyleIcon","FontAwesomeIcon","IssueCommentsBadge_templateObject2","IssueCommentsBadge","numOfComments","shared_FlexContainer","faCommentDots","StyledIssueItem","IssueDetails_templateObject","StyledIssueName","IssueDetails_templateObject2","StyledMarginRight","span","IssueDetails_templateObject3","IssueDetails","issue","href","IssueDetails_IssueCommentsBadge","StyledLabelTitle","h2","IssueList_templateObject","ListHeader","selectedRepo","selectedLabel","Fragment","shared_SectionTitle","as","isFetching","className","LoadingContainer","shared_LoadingSpinner","IssueList","_ref2","IssueList_ListHeader","IssueList_LoadingContainer","MainContent_IssueDetails_IssueDetails","StyledMain","MainContent_templateObject","selectedLabels","ui","MainContent_IssueList_IssueList","MainContent_InstructionScreen_InstructionScreen","StyledVerticalDivider","Divider_templateObject","Divider","SideMenuSection","SideMenuSection_templateObject","StyledLabelBadge","LabelBadge_templateObject","LabelBadge","fetchIssuesWithLabel","LabelList","LabelSection_LabelBadge_LabelBadge","StyledLabelSectionEmpty","LabelSectionEmpty_templateObject","StyledIcon","LabelSectionEmpty_templateObject2","StyledMessage","LabelSectionEmpty_templateObject3","LabelSectionEmpty","size","CircularButton","button","CircularButton_templateObject","StyledLabelSectionHeader","LabelSectionHeader_templateObject","StyledRepoTitle","LabelSectionHeader_templateObject2","LabelSectionHeader","shared_CircularButton","faRedo","issueActions","labelActions","SideMenu_SideMenuSection","LabelSection_LabelSectionHeader_LabelSectionHeader","LabelSection_LabelList_LabelList","LabelSection_LabelSectionEmpty_LabelSectionEmpty","StyledInput","input","StyledInput_templateObject","StyledForm","form","AddRepoForm_templateObject","AddRepoForm","_useState","useState","_useState2","Object","slicedToArray","setRepoName","onSubmit","event","preventDefault","repoNameWithoutSpaces","replace","shared_StyledInput","value","placeholder","onChange","e","target","DeleteButton","RepoItem_templateObject","StyledRepoItem","RepoItem_templateObject2","StyledRepoName","h4","RepoItem_templateObject3","StyledMutedText","RepoItem_templateObject4","RepoItem","numberOfIssues","isActive","aria-label","stopPropagation","faTrashAlt","shared_Badge","RepoList","reposArray","forEach","push","RepoSection_RepoItem_RepoItem","UserMenu","repoActions","uiActions","UserMenu_UserMenu","RepoSection_AddRepoForm_AddRepoForm","RepoSection_RepoList_RepoList","StyledSideMenu","SideMenu_templateObject","SideMenu_RepoSection_RepoSection","shared_Divider","SideMenu_LabelSection_LabelSection","App","TopLevel_Alert","components_SideMenu_SideMenu","components_MainContent_MainContent","initialState","alertReducer","action","_action$payload","combineReducers","objectSpread","defineProperty","newState","repoReducer","Set","newSet","add","has","delete","uiReducer","rootReducer","issueReducer","labelReducer","persistedReposData","store","createStore","applyMiddleware","thunkMiddleware","ReactDOM","render","es","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"6jDAaoBA,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,6GCjBOC,EAAY,YACZC,EAAa,aAEbC,EAAW,SAACC,EAAcC,GAAf,MACtB,CACEC,QAAS,CACPF,OACAC,QAEFA,KAAMJ,IAIGM,EAAY,iBACvB,CACEF,KAAMH,qBCZKM,EALE,CACfC,aAAc,qBACdC,mBAAoB,yCCgDPC,EAF2B,0GA7CnBN,EAAiBO,GACpC,IACE,IAAMC,EAAsBC,aAAaC,QAAb,GAAAC,OAAwBX,EAAxB,KAAAW,OAAgCJ,IAE5D,OAAOC,EAAsBI,KAAKC,MAAML,GAAuB,KAC/D,MAAAM,GACA,4CAIed,EAAiBO,EAAaQ,GAC/C,IACE,IAAMC,EAAmBJ,KAAKK,UAAUF,GAExCN,aAAaS,QAAb,GAAAP,OAAwBX,EAAxB,KAAAW,OAAgCJ,GAAOS,GACvC,MAAAG,GACA,iDAIoBC,GACtB,IAGEX,aAAaY,WAAb,GAAAV,OAFwB,QAExB,KAAAA,OAAmCS,IACnC,MAAOE,GACP,sDAIyBC,GAC3B,IACE,IAEMC,EAFYC,KAAKC,cAAc,OAAQ,OAEdC,OAAO,SAACC,GACrC,OAAOA,IAASL,IAGlBE,KAAKI,YAAY,OAAQ,MAAOL,GAChC,MAAAM,GACA,kBCnCOC,EAAsB,sBACtBC,EAAoB,oBACpBC,EAAa,aACbC,EAAgB,gBAEhBC,EAAe,iBAC1B,CAAEnC,KAAM+B,IAGGK,EAAa,iBACxB,CAAEpC,KAAMgC,IAGGK,EAAY,SAACjB,EAAkBkB,GAAnB,MACvB,CACErC,QAAS,CAAEmB,WAAUkB,UACrBtC,KAAMiC,IAIGM,EAAe,SAACnB,GAAD,MAC1B,CACEnB,QAAS,CAAEmB,YACXpB,KAAMkC,IAIGM,EAAc,SAACpB,GAAD,IAAmBqB,EAAnBC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,IAAAA,UAAA,UAAqD,SAACG,GAC/EA,EAASV,KAET,IAAMW,EAAYC,EAAarB,cAAc,QAASN,GAGtD,OAFgB0B,IAAcL,EAAeO,QAAQC,QAAQH,GAAaI,EAAmB9B,IAG1F+B,KACC,SAACC,GACCP,EAAST,KACTW,EAAalB,YAAY,QAAST,EAAUgC,GAC5C,IACMC,EADcD,EAASrC,KACYuC,IAAI,SAACvC,GAC5C,MAAO,CACLwC,MAAOxC,EAAKwC,MACZC,KAAMzC,EAAKyC,QAGfX,EAASR,EAAUjB,EAAUiC,KAE/B,SAACI,GACCZ,EAAST,KACLqB,EAAML,UAAsC,MAA1BK,EAAML,SAASM,QACnCb,EAAS/C,EAASK,EAASE,mBAAoB,UAEjDsD,QAAQC,IAAIzD,EAASC,aAAcqD,OAKrCP,EAAqB,SAAC9B,GAC1B,OAAOyC,IAAMC,IAAN,gCAAAnD,OAA0CS,EAA1C,0BC9DI2C,EAAe,eACfC,EAAc,cAEdC,EAAa,SAAC7C,GAAD,OAAsB,SAACyB,GAC/CA,EAASL,EAAYpB,IAErByB,EAAS,CACP5C,QAASmB,EACTpB,KAAMgE,MAIGE,EAAc,SAAC9C,EAAkB+C,GAAnB,MACzB,CACElE,QAAS,CACPmE,MAAOD,EACPvC,KAAMR,GAERpB,KAAM+D,ICfGM,EAAsB,sBACtBC,EAAoB,oBACpBC,EAAa,aACbC,EAAgB,gBAEhBrC,EAAe,iBAC1B,CAAEnC,KAAMqE,IAGGjC,EAAa,iBACxB,CAAEpC,KAAMsE,IAGGG,EAAe,SAACrD,GAAD,MAC1B,CACEnB,QAAS,CAAEmB,YACXpB,KAAMwE,IAIGE,EAAkB,SAACtD,EAAkBuD,GAAnB,MAC7B,CACE1E,QAAS,CAAEmB,WAAUuD,UACrB3E,KAAMuE,IAIGK,EAAc,SAAChD,EAAcU,GAAf,OAAkC,SAACO,GAI5D,OAHAA,EAASV,KACTU,EAASqB,EAAYtC,EAAMU,IAEpBuB,IAAMC,IAAN,gCAAAnD,OAA0CiB,EAA1C,mBAAAjB,OAAgE2B,IACpEa,KACC,SAACC,GACCP,EAAST,KACT,IAAMiB,EAA8BD,EAASrC,KAAKuC,IAAI,SAACvC,GACrD,MAAO,CACL8D,SAAU9D,EAAK8D,SACfC,WAAY/D,EAAK+D,WACjBC,MAAOhE,EAAKgE,MACZC,WAAYjE,EAAKiE,WACjBC,IAAKlE,EAAKmE,YAGdrC,EAAS6B,EAAgB9C,EAAMyB,KAEjC,SAACI,GACCZ,EAAST,KACTuB,QAAQC,IAAIzD,EAASC,aAAcqD,OChD9B0B,EAAW,WACXC,EAAc,cAEdC,EAAU,SAACjE,GAAD,OAAsB,SAACyB,EAAoByC,GAChEzC,EAAS,CACP5C,QAASmB,EACTpB,KAAMmF,IAIRpC,EAAalB,YAAY,OAAQ,MAAO0D,MAAMC,KAAKF,IAAWG,UAGnDC,EAAa,SAACtE,GAAD,OAAsB,SAACyB,GAC/CA,EAAS,CACP5C,QAASmB,EACTpB,KAAMoF,IAGRvC,EAASN,EAAanB,IACtByB,EAAS4B,EAAarD,IACtB2B,EAAa4C,sBAAsBvE,GACnC2B,EAAa6C,iBAAiBxE,4vCCnBhC,IAAMyE,GAAcC,IAAOC,IAAVC,KACD,SAACC,GAAD,MAA0B,UAAfA,EAAMjG,KAAmB,UAA4B,SAAfiG,EAAMjG,KAAkB,OAAS,UAe5FkG,GAAYJ,IAAOC,IAAVI,MASTC,GAAeN,IAAOC,IAAVM,MAKZC,GAAcR,IAAOS,GAAVC,MAOXC,GAAuBX,IAAOC,IAAVW,MA+CXC,eA/BS,SAACC,GACvB,MAAO,CACLC,MAAOD,EAAMC,QA6BuB,CACtC3G,UAAW4G,EAAa5G,WADXyG,CAzBc,SAAAI,GAA0B,IAAvBF,EAAuBE,EAAvBF,MAAO3G,EAAgB6G,EAAhB7G,UACrC,OAAK2G,EAAMG,KAKTC,EAAAC,EAAAC,cAACtB,GAAD,CAAa7F,KAAM6G,EAAM7G,MACvBiH,EAAAC,EAAAC,cAACjB,GAAD,KACEe,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAiBC,KAAqB,UAAfR,EAAM7G,KAAmBsH,IAAgC,SAAfT,EAAM7G,KAAkBuH,IAASC,OAEpGP,EAAAC,EAAAC,cAACf,GAAD,KACEa,EAAAC,EAAAC,cAACb,GAAD,KACIO,EAAM7G,KACRiH,EAAAC,EAAAC,cAACV,GAAD,CAAsBgB,cAAY,QAAQC,QAASxH,GACjD+G,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAiBC,KAAMM,QAG3BV,EAAAC,EAAAC,cAAA,OAAKM,cAAY,aACbZ,EAAM9G,QAhBP,i8BClEX,IAAM6H,GAAa9B,IAAOC,IAAV8B,MAMVC,GAAoBhC,IAAOC,IAAVgC,MAgBjBC,GAAmBlC,IAAOC,IAAVkC,MAShBC,GAAkBpC,IAAOS,GAAV4B,MAIfC,GAAoBtC,IAAOC,IAAVsC,MAmBRC,GAf4D,SAAAvB,GAAwB,IAArBwB,EAAqBxB,EAArBwB,EAAGC,EAAkBzB,EAAlByB,YAC/E,OACEvB,EAAAC,EAAAC,cAACS,GAAD,KACEX,EAAAC,EAAAC,cAACa,GAAD,KAAmBO,GACnBtB,EAAAC,EAAAC,cAACW,GAAD,KACEb,EAAAC,EAAAC,cAACe,GAAD,KAAkBM,EAAYzD,OAC9BkC,EAAAC,EAAAC,cAACiB,GAAD,KACEnB,EAAAC,EAAAC,cAAA,WAAMqB,EAAYzI,MAClBkH,EAAAC,EAAAC,cAAA,WAAMqB,EAAYC,wMCzC5B,IAkBMC,GAA0B5C,IAAOC,IAAV4C,MAQvBC,GAAgE,SAAA7B,GAAsB,IAAnB8B,EAAmB9B,EAAnB8B,aACvE,OACE5B,EAAAC,EAAAC,cAACuB,GAAD,CAAyBjB,cAAY,gBAClCoB,EAAcvF,IAAI,SAACkF,EAA0BD,GAA3B,OACjBtB,EAAAC,EAAAC,cAAC2B,GAAD,CAAiBvI,IAAKgI,EAAGA,EAAGA,EAAI,EAAGC,YAAaA,QAMxDI,GAAkBG,aAAe,CAAEF,aApCC,CAClC,CACEJ,QAAS,0BACT1I,KAAM,iDACNgF,MAAO,cAET,CACE0D,QAAS,yBACT1I,KAAM,qDACNgF,MAAO,UAET,CACE0D,QAAS,GACT1I,KAAM,yFACNgF,MAAO,YAwBI6D,2LCvCf,IAQeI,GAROlD,IAAOC,IAAVkD,KACF,SAAChD,GAAD,OAAWA,EAAMiD,YAAc,WAEpC,SAACjD,GAAD,OAAWA,EAAMkD,QAAU,KAClB,SAAClD,GAAD,OAAWA,EAAMmD,gBAAkB,WACpC,SAACnD,GAAD,OAAWA,EAAMoD,eAAiB,+4BCbtD,IAAMC,GAASC,YAAHC,MA+CGC,GArCQ3D,IAAOC,IAAV2D,KAeHJ,4MCzBjB,IAQeK,GARM7D,IAAOS,GAAVqD,MCFX,SAASC,GAAWC,GACzB,IAAMC,EAAW,IAAIC,KAAKF,GAEpBG,EAAOF,EAASG,cAChBC,EAAQC,GAAoBL,EAASM,WAAa,GAClDC,EAAMF,GAAoBL,EAASQ,WAEzC,SAAA5J,OAAUsJ,EAAV,KAAAtJ,OAAkBwJ,EAAlB,KAAAxJ,OAA2B2J,GAG7B,SAASF,GAAoBI,GAC3B,OAAIA,GAAK,EACP,IAAA7J,OAAW6J,GAGNA,iWCbT,IAgBeC,GAhBD3E,IAAOC,IAAV2E,KAEW,SAACzE,GAAD,OAAWA,EAAM0E,OAAS,UAAY,uTCI5D,IAAMC,GAA2B9E,YAAO2E,GAAP3E,CAAH+E,MAQxBC,GAAYhF,YAAOiF,IAAPjF,CAAHkF,MAiBAC,GAXiD,SAAAlE,GAAuB,IAApBmE,EAAoBnE,EAApBmE,cACjE,OACEjE,EAAAC,EAAAC,cAACgE,GAAD,CAAejC,WAAW,SAASzB,cAAY,YAC7CR,EAAAC,EAAAC,cAACyD,GAAD,KACE3D,EAAAC,EAAAC,cAAC2D,GAAD,CAAWzD,KAAM+D,MACjBnE,EAAAC,EAAAC,cAAA,YAAO+D,+jBCpBf,IAAMG,GAAkBvF,IAAOC,IAAVuF,MAUfC,GAAkBzF,IAAOoB,EAAVsE,MAYfC,GAAoB3F,IAAO4F,KAAVC,MAuBRC,GAnBkC,SAAA7E,GAAe,IAAZ8E,EAAY9E,EAAZ8E,MAClD,OACE5E,EAAAC,EAAAC,cAACkE,GAAD,CAAiB9K,IAAKsL,EAAM5G,KAC1BgC,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACoE,GAAD,CAAiBO,KAAMD,EAAM5G,KAAM4G,EAAM9G,OACzCkC,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACsE,GAAD,KACExE,EAAAC,EAAAC,cAAA,wBADF,IACsBF,EAAAC,EAAAC,cAAA,cAAS0C,GAAWgC,EAAM7G,cAEhDiC,EAAAC,EAAAC,cAAA,YACEF,EAAAC,EAAAC,cAAA,wBADF,IACsBF,EAAAC,EAAAC,cAAA,cAAS0C,GAAWgC,EAAM/G,gBAIpDmC,EAAAC,EAAAC,cAAC4E,GAAD,CAAoBb,cAAeW,EAAMhH,oLCtC/C,IAAMmH,GAAmBlG,IAAOmG,GAAVC,MAOhBC,GAA4B,SAAApF,GAAA,IAAGpC,EAAHoC,EAAGpC,OAAQyH,EAAXrF,EAAWqF,aAAcC,EAAzBtF,EAAyBsF,cAAzB,OAChCpF,EAAAC,EAAAC,cAACF,EAAAC,EAAMoF,SAAP,KACErF,EAAAC,EAAAC,cAAC6E,GAAD,KAAmBK,GACnBpF,EAAAC,EAAAC,cAACgE,GAAD,CAAejC,WAAW,SAASC,OAAO,mBACxClC,EAAAC,EAAAC,cAACoF,GAAD,CAAcC,GAAG,MAAjB,SACU7H,EAAO8H,WACX,KADI,KAAA9L,OAECgE,EAAO5D,KAAKqL,GAAgBzH,EAAO5D,KAAKqL,GAAczJ,OAAS,EAFhE,MAKVsE,EAAAC,EAAAC,cAAA,OAAKuF,UAAU,sBAKfC,GAA6B,kBACjC1F,EAAAC,EAAAC,cAACgE,GAAD,CAAejC,WAAW,SAASE,eAAe,SAASC,cAAc,SAASF,OAAO,kBACvF1B,cAAY,iBAEZR,EAAAC,EAAAC,cAACyF,GAAD,MACA3F,EAAAC,EAAAC,cAAA,0BAgBW0F,GAZkB,SAAAC,GAAA,IAAGnI,EAAHmI,EAAGnI,OAAQyH,EAAXU,EAAWV,aAAcC,EAAzBS,EAAyBT,cAAzB,OAC/BpF,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAC4F,GAAD,CAAYpI,OAAQA,EAAQyH,aAAcA,EAAcC,cAAeA,IACrE1H,EAAO8H,WACLxF,EAAAC,EAAAC,cAAC6F,GAAD,MACA/F,EAAAC,EAAAC,cAAA,OAAKM,cAAY,aACd9C,EAAO5D,KAAKqL,GAAc9I,IAAI,SAACuI,GAAD,OAAkB5E,EAAAC,EAAAC,cAAC8F,GAAD,CAAc1M,IAAKsL,EAAM5G,IAAK4G,MAAOA,0ICtChG,IAAMqB,GAAapH,IAAOC,IAAVoH,MAuBDxG,eAjBS,SAACC,GACvB,MAAO,CACLjC,OAAQiC,EAAMjC,OACdyI,eAAgBxG,EAAMyG,GAAGD,eACzBhB,aAAcxF,EAAMyG,GAAGjB,eAaZzF,CAToB,SAAAI,GAAA,IAAGpC,EAAHoC,EAAGpC,OAAQyH,EAAXrF,EAAWqF,aAAcgB,EAAzBrG,EAAyBqG,eAAzB,OACjCnG,EAAAC,EAAAC,cAAC+F,GAAD,KACIvI,EAAO8H,YAAc9H,EAAO5D,KAAKqL,GAC/BnF,EAAAC,EAAAC,cAACmG,GAAD,CAAWlB,aAAcA,EAAczH,OAAQA,EAAQ0H,cAAee,EAAehB,KACrFnF,EAAAC,EAAAC,cAACoG,GAAD,oLCvBR,IAAMC,GAAwB1H,IAAOC,IAAV0H,MAaZC,GANW,WACxB,OACEzG,EAAAC,EAAAC,cAACqG,GAAD,uICVJ,IAMeG,GANS7H,IAAOC,IAAV6H,6VCMrB,IAAMC,GAAmB/H,IAAOC,IAAV+H,KAKJ,SAAC7H,GAAD,OAAWA,EAAM0E,OAAS,KAAO1E,EAAM1C,OAAS,WAAa,WACzD,SAAC0C,GAAD,OAAWA,EAAM1C,MAAQ,IAAM0C,EAAM1C,MAAQ,WAElD,SAAC0C,GAAD,OAAWA,EAAM0E,OAAS,MAAQ,WAgBpCoD,GAVmB,SAAAhH,GAA2C,IAAxCnF,EAAwCmF,EAAxCnF,KAAMwC,EAAkC2C,EAAlC3C,MAAO4J,EAA2BjH,EAA3BiH,qBAChD,OACE/G,EAAAC,EAAAC,cAAC0G,GAAD,CAAkBpG,cAAY,YAAYlE,MAAOa,EAAMb,MACrDmE,QAAS,kBAAMsG,EAAqBpM,EAAMwC,EAAMZ,QAE/CY,EAAMZ,OCREyK,GAdkB,SAAAlH,GAA0C,IAAvCnC,EAAuCmC,EAAvCnC,YAAawH,EAA0BrF,EAA1BqF,aAAc9J,EAAYyE,EAAZzE,OAC7D,OAAKA,EAAOvB,KAAKqL,GAKfnF,EAAAC,EAAAC,cAACF,EAAAC,EAAMoF,SAAP,KACGhK,EAAOvB,KAAKqL,GAAc9I,IAAI,SAACc,GAC9B,OAAO6C,EAAAC,EAAAC,cAAC+G,GAAD,CAAY3N,IAAK6D,EAAMZ,KAAMY,MAAOA,EAAOxC,KAAMwK,EAAc4B,qBAAsBpJ,OANzF,2nBCFX,IAAMuJ,GAA0BrI,IAAOC,IAAVqI,MAWvBC,GAAavI,IAAOC,IAAVuI,MAYVC,GAAgBzI,IAAOC,IAAVyI,MAcJC,GAVqB,WAClC,OACExH,EAAAC,EAAAC,cAACgH,GAAD,KACElH,EAAAC,EAAAC,cAACkH,GAAD,KAAYpH,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAiBC,KAAMC,IAAeoH,KAAK,QACvDzH,EAAAC,EAAAC,cAACoH,GAAD,KAAetH,EAAAC,EAAAC,cAAA,6DACfF,EAAAC,EAAAC,cAAA,miBCnCN,IAyBewH,GAzBQ7I,IAAO8I,OAAVC,uVCKpB,IAAMC,GAA2BhJ,IAAOC,IAAVgJ,MAOxBC,GAAkBlJ,IAAOmG,GAAVgD,MAkBNC,GAX2B,SAAAnI,GAAmC,IAAhCvE,EAAgCuE,EAAhCvE,YAAa4J,EAAmBrF,EAAnBqF,aACxD,OACEnF,EAAAC,EAAAC,cAAC2H,GAAD,KACE7H,EAAAC,EAAAC,cAAC6H,GAAD,KAAkB5C,GAClBnF,EAAAC,EAAAC,cAACgI,GAAD,CAAgB1H,cAAY,gBAAgBC,QAAS,kBAAMlF,EAAY4J,GAAc,KACnFnF,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAiBC,KAAM+H,SC8BhBzI,eA3CS,SAACC,GACvB,MAAO,CACLtE,OAAQsE,EAAMtE,OACd8J,aAAcxF,EAAMyG,GAAGjB,eAwCa,CACtCxH,YAAayK,EAAazK,YAC1BpC,YAAa8M,EAAa9M,aAFbmE,CApCqB,SAAAI,GAAwD,IAArDvE,EAAqDuE,EAArDvE,YAAaoC,EAAwCmC,EAAxCnC,YAAatC,EAA2ByE,EAA3BzE,OAAQ8J,EAAmBrF,EAAnBqF,aACvE,OAAI9J,EAAOmK,WAEPxF,EAAAC,EAAAC,cAACoI,GAAD,KACEtI,EAAAC,EAAAC,cAACqI,GAAD,CAAoBhN,YAAaA,EAAa4J,aAAcA,IAC5DnF,EAAAC,EAAAC,cAACgE,GAAD,CAAejC,WAAW,SAASE,eAAe,SAASC,cAAc,SAASF,OAAO,kBACvF1B,cAAY,iBAEZR,EAAAC,EAAAC,cAACyF,GAAD,MACA3F,EAAAC,EAAAC,cAAA,0BAMH7E,EAAOvB,KAAKqL,IAAsD,IAArC9J,EAAOvB,KAAKqL,GAAczJ,OAU1DsE,EAAAC,EAAAC,cAACoI,GAAD,CAAiB9H,cAAY,aAC3BR,EAAAC,EAAAC,cAACqI,GAAD,CAAoBhN,YAAaA,EAAa4J,aAAcA,IAC5DnF,EAAAC,EAAAC,cAACgE,GAAD,CAAejC,WAAW,SAASC,OAAO,YACxClC,EAAAC,EAAAC,cAACoF,GAAD,gBAAuBjK,EAAOvB,KAAKqL,GAAgB9J,EAAOvB,KAAKqL,GAAczJ,OAAS,EAAtF,KACAsE,EAAAC,EAAAC,cAAA,OAAKuF,UAAU,oBAEjBzF,EAAAC,EAAAC,cAACsI,GAAD,CAAW7K,YAAaA,EAAawH,aAAcA,EAAc9J,OAAQA,KAdzE2E,EAAAC,EAAAC,cAACoI,GAAD,CAAiB9H,cAAY,kBAC3BR,EAAAC,EAAAC,cAACqI,GAAD,CAAoBhN,YAAaA,EAAa4J,aAAcA,IAC5DnF,EAAAC,EAAAC,cAACuI,GAAD,qgBCrCR,IAuBeC,GAvBK7J,IAAO8J,MAAVC,kKCGjB,IAAMC,GAAahK,IAAOiK,KAAVC,MA2BDC,GApBoB,SAAAlJ,GAA6B,IAA1B1B,EAA0B0B,EAA1B1B,QAASpB,EAAiB8C,EAAjB9C,WAAiBiM,EAC9BC,mBAAiB,eADaC,EAAAC,OAAAC,GAAA,EAAAD,CAAAH,EAAA,GACvD9O,EADuDgP,EAAA,GAC7CG,EAD6CH,EAAA,GAW9D,OACEnJ,EAAAC,EAAAC,cAAC2I,GAAD,CAAYU,SATI,SAACC,GACjBA,EAAMC,iBACN,IAAMC,EAAwBvP,EAASwP,QAAQ,OAAQ,IACvDvL,EAAQsL,GACR1M,EAAW0M,GACXJ,EAAY,KAIqB9I,cAAY,WAC3CR,EAAAC,EAAAC,cAAC0J,GAAD,CAAaC,MAAO1P,EAAU2P,YAAY,6BACxCC,SAAU,SAACC,GAAD,OAAOV,EAAYU,EAAEC,OAAOJ,k9BCjB9C,IAAMK,GAAerL,YAAO6I,GAAP7I,CAAHsL,MAeZC,GAAiBvL,IAAOC,IAAVuL,KAEE,SAACrL,GAAD,OAAWA,EAAM0E,OAAS,UAAY,QAUpC,SAAC1E,GAAD,OAAWA,EAAM0E,OAAS,UAAY,yBAGnDF,GAIA0G,IAKLI,GAAiBzL,IAAO0L,GAAVC,MAKdC,GAAkB5L,IAAO4F,KAAViG,MA0BNC,GAtBiB,SAAA7K,GAAuF,IAApF8K,EAAoF9K,EAApF8K,eAAgBzQ,EAAoE2F,EAApE3F,SAAUsE,EAA0DqB,EAA1DrB,WAAYzB,EAA8C8C,EAA9C9C,WAAYmI,EAAkCrF,EAAlCqF,aAAcC,EAAoBtF,EAApBsF,cAC3FyF,EAAW1F,IAAiBhL,EAClC,OACE6F,EAAAC,EAAAC,cAACkK,GAAD,CAAgB5J,cAAY,WAAWkD,OAAQmH,EAAUpK,QAAS,kBAAMzD,EAAW7C,KACjF6F,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACoK,GAAD,KAAiBnQ,GACjB6F,EAAAC,EAAAC,cAAA,UACGkF,GAAiBpF,EAAAC,EAAAC,cAACuK,GAAD,4BAGtBzK,EAAAC,EAAAC,cAACgE,GAAD,CAAejC,WAAW,SAASE,eAAe,UAChDnC,EAAAC,EAAAC,cAACgK,GAAD,CAAcY,aAAW,cACvBrK,QAAS,SAACuJ,GAAwBA,EAAEe,kBAAmBtM,EAAWtE,KAElE6F,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAiBC,KAAM4K,OAEzBhL,EAAAC,EAAAC,cAAC+K,GAAD,CAAOvH,OAAQmH,GAAWD,MCvCnBM,GA5BiB,SAAApL,GAA6E,IAA1EpC,EAA0EoC,EAA1EpC,OAAQc,EAAkEsB,EAAlEtB,MAAOC,EAA2DqB,EAA3DrB,WAAYzB,EAA+C8C,EAA/C9C,WAAYmI,EAAmCrF,EAAnCqF,aAAcgB,EAAqBrG,EAArBqG,eAChFgF,EAAuB,GAM7B,OAJA3M,EAAM4M,QAAQ,SAACjR,GACbgR,EAAWE,KAAKlR,KAIhB6F,EAAAC,EAAAC,cAACF,EAAAC,EAAMoF,SAAP,KACErF,EAAAC,EAAAC,cAACgE,GAAD,CAAejC,WAAW,SAASC,OAAO,iBACxClC,EAAAC,EAAAC,cAACoF,GAAD,qBACAtF,EAAAC,EAAAC,cAAA,OAAKuF,UAAU,oBAGf0F,EAAW9O,IAAI,SAAClC,GAAD,OACb6F,EAAAC,EAAAC,cAACoL,GAAD,CAAUhS,IAAKa,EAAUA,SAAUA,EACjCsE,WAAYA,EACZzB,WAAYA,EACZmI,aAAcA,EACdC,cAAee,EAAehM,GAC9ByQ,eAAgBlN,EAAO5D,KAAKK,GAAYuD,EAAO5D,KAAKK,GAAUuB,OAAS,QCpBpE6P,GAJY,WACzB,OAAO,MCoCM7L,eA5BS,SAACC,GACvB,MAAO,CACLjC,OAAQiC,EAAMjC,OACdc,MAAOmB,EAAMnB,MACb2H,eAAgBxG,EAAMyG,GAAGD,eACzBhB,aAAcxF,EAAMyG,GAAGjB,eAuBa,CACtC/G,QAASoN,EAAYpN,QACrBK,WAAY+M,EAAY/M,WACxBd,YAAayK,EAAazK,YAC1BX,WAAYyO,EAAUzO,YAJT0C,CAnBoB,SAAAI,GAE5B,IADLpC,EACKoC,EADLpC,OAAQc,EACHsB,EADGtB,MAAOJ,EACV0B,EADU1B,QAASK,EACnBqB,EADmBrB,WAAYzB,EAC/B8C,EAD+B9C,WAAYmI,EAC3CrF,EAD2CqF,aAAcgB,EACzDrG,EADyDqG,eAE9D,OACEnG,EAAAC,EAAAC,cAACoI,GAAD,KACEtI,EAAAC,EAAAC,cAACwL,GAAD,MACA1L,EAAAC,EAAAC,cAACyL,GAAD,CAAavN,QAASA,EAASpB,WAAYA,IAC3CgD,EAAAC,EAAAC,cAAC0L,GAAD,CACElO,OAAQA,EACRc,MAAOA,EACPxB,WAAYA,EACZmI,aAAcA,EACd1G,WAAYA,EACZ0H,eAAgBA,qOCxBxB,IAAM0F,GAAiBhN,IAAOC,IAAVgN,MAgCLpM,eAvBS,SAACC,GACvB,MAAO,CACLwF,aAAcxF,EAAMyG,GAAGjB,eAqBZzF,CAjBiB,SAAAI,GAAsB,IAAnBqF,EAAmBrF,EAAnBqF,aACjC,OACEnF,EAAAC,EAAAC,cAAC2L,GAAD,KACE7L,EAAAC,EAAAC,cAAC6L,GAAD,MACE5G,EAEEnF,EAAAC,EAAAC,cAACF,EAAAC,EAAMoF,SAAP,KACErF,EAAAC,EAAAC,cAAC8L,GAAD,MACAhM,EAAAC,EAAAC,cAAC+L,GAAD,OAGF,QCjBKC,GAVO,WACpB,OACElM,EAAAC,EAAAC,cAAA,OAAKuF,UAAU,OACbzF,EAAAC,EAAAC,cAACiM,GAAD,MACAnM,EAAAC,EAAAC,cAACkM,GAAD,MACApM,EAAAC,EAAAC,cAACmM,GAAD,yBCPAC,GAIF,CACFvM,MAAM,EACNjH,KAAM,GACNC,KAAM,QA0BOwT,GAvBM,WAAuC,IAAtC5M,EAAsClE,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAA9B6Q,GAAcE,EAAgB/Q,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EAC1D,OAAQ6Q,EAAOzT,MACb,KAAKJ,EAAW,IAAA8T,EACOD,EAAOxT,QAC5B,MAAO,CACL+G,MAAM,EACNjH,KAJY2T,EACP3T,KAILC,KALY0T,EACD1T,MAOf,KAAKH,EACH,MAAO,CACLmH,MAAM,EACNjH,KAAM,GACNC,KAAM,QAGV,QACE,OAAO4G,qBCxBP2M,GAGF,CACFxS,KAAM,GACN0L,YAAY,GAkCCkH,gBAAgB,CAC7B5S,KApBuB,WAA4C,IAA3C6F,EAA2ClE,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAnC6Q,GAAaxS,KAAM0S,EAAgB/Q,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EACnE,OAAQ6Q,EAAOzT,MACb,KAAKuE,EACH,OAAO8L,OAAAuD,GAAA,EAAAvD,CAAA,GACFzJ,EADLyJ,OAAAwD,GAAA,EAAAxD,CAAA,GAEGoD,EAAOxT,QAAQmB,SAAWqS,EAAOxT,QAAQ0E,SAG9C,KAAKH,EACH,IAAMsP,EAAQzD,OAAAuD,GAAA,EAAAvD,CAAA,GAAQzJ,GAEtB,cADOkN,EAASL,EAAOxT,QAAQmB,UACxB0S,EAET,QACE,OAAOlN,IAOX6F,WAjC6B,WAAkD,IAAjD7F,EAAiDlE,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAzC6Q,GAAa9G,WACnD,QAD+E/J,UAAAC,OAAA,EAAAD,UAAA,QAAAE,GAChE5C,MACb,KAAKqE,EACH,OAAO,EACT,KAAKC,EACH,OAAO,EACT,QACE,OAAOsC,MCfP2M,GAGF,CACFxS,KAAM,GACN0L,YAAY,GAmCCkH,gBAAgB,CAC7B5S,KArBuB,WAA4C,IAA3C6F,EAA2ClE,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAnC6Q,GAAaxS,KAAM0S,EAAgB/Q,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EACnE,OAAQ6Q,EAAOzT,MACb,KAAKiC,EACH,OAAOoO,OAAAuD,GAAA,EAAAvD,CAAA,GACFzJ,EADLyJ,OAAAwD,GAAA,EAAAxD,CAAA,GAEGoD,EAAOxT,QAAQmB,SAAWqS,EAAOxT,QAAQqC,SAG9C,KAAKJ,EACH,IAAM4R,EAAQzD,OAAAuD,GAAA,EAAAvD,CAAA,GAAQzJ,GAGtB,cAFOkN,EAASL,EAAOxT,QAAQmB,UAExB0S,EAET,QACE,OAAOlN,IAOX6F,WAlC6B,WAAkD,IAAjD7F,EAAiDlE,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAzC6Q,GAAa9G,WACnD,QAD+E/J,UAAAC,OAAA,EAAAD,UAAA,QAAAE,GAChE5C,MACb,KAAK+B,EACH,OAAO,EACT,KAAKC,EACH,OAAO,EACT,QACE,OAAO4E,MCGEmN,GAvBK,WAAiD,IAAhDnN,EAAgDlE,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAA3B,IAAIsR,IAAOP,EAAgB/Q,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EACnE,OAAQ6Q,EAAOzT,MACb,KAAKmF,EACH,IAAM8O,EAAS,IAAID,IAAIpN,GAGvB,OAFAqN,EAAOC,IAAIT,EAAOxT,SAEXgU,EAET,KAAK7O,EACH,IAAM6O,EAAS,IAAID,IAAIpN,GAMvB,OAJIqN,EAAOE,IAAIV,EAAOxT,UACpBgU,EAAOG,OAAOX,EAAOxT,SAGhBgU,EAET,QACE,OAAOrN,IClBP2M,GAAe,CACnBnG,eAAgB,GAChBhB,aAAc,IAoBDiI,GAjBG,WAAuC,IAAtCzN,EAAsClE,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAA9B6Q,GAAcE,EAAgB/Q,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EACvD,OAAQ6Q,EAAOzT,MACb,KAAKgE,EACH,OAAOqM,OAAAuD,GAAA,EAAAvD,CAAA,GAAKzJ,EAAZ,CAAmBwF,aAAcqH,EAAOxT,UAE1C,KAAK8D,EACH,OAAOsM,OAAAuD,GAAA,EAAAvD,CAAA,GACFzJ,EADL,CAEEwG,eAAeiD,OAAAwD,GAAA,EAAAxD,CAAA,GAAIoD,EAAOxT,QAAQ2B,KAAO6R,EAAOxT,QAAQmE,SAG5D,QACE,OAAOwC,ICLE0N,GAVKX,aAAgB,CAClC9M,MAAO2M,GACP7O,OAAQ4P,GACRjS,OAAQkS,GACR/O,MAAOsO,GACP1G,GAAIgH,KCJAI,GAAqB1R,EAAarB,cAAc,OAAQ,QAAU,GAYzDgT,GAVDC,aACZL,GACA,CACE7O,MAAO,IAAIuO,IAAIS,KAEjBG,aACEC,aCHJC,IAASC,OACP9N,EAAAC,EAAAC,cAAC6N,EAAA,EAAD,CAAUN,MAAOA,IACfzN,EAAAC,EAAAC,cAAC8N,GAAD,OAEFC,SAASC,eAAe,S3CyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMnS,KAAK,SAAAoS,GACjCA,EAAaC","file":"static/js/main.6189781a.chunk.js","sourcesContent":["/* tslint:disable */\n// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import AlertType from 'core/models/AlertType';\r\n\r\nexport const SET_ALERT = 'SET_ALERT';\r\nexport const HIDE_ALERT = 'HIDE_ALERT';\r\n\r\nexport const setAlert = (text: string, type: AlertType) => (\r\n  {\r\n    payload: {\r\n      text,\r\n      type,\r\n    },\r\n    type: SET_ALERT,\r\n  }\r\n);\r\n\r\nexport const hideAlert = () => (\r\n  {\r\n    type: HIDE_ALERT,\r\n  }\r\n);\r\n","const MESSAGES = {\r\n  errorGeneric: 'An error occurred.',\r\n  repositoryNotFound: 'Repository not found.',\r\n};\r\n\r\nexport default MESSAGES;\r\n","import CacheService, { TypeCache } from './cacheService.interface';\r\n\r\nclass LocalStorageService implements CacheService {\r\n  public loadFromCache(type: TypeCache, key: string) {\r\n    try {\r\n      const serializedReposData = localStorage.getItem(`${type}-${key}`);\r\n\r\n      return serializedReposData ? JSON.parse(serializedReposData) : null;\r\n    } catch {\r\n      return;\r\n    }\r\n  }\r\n\r\n  public saveToCache(type: TypeCache, key: string, data: any) {\r\n    try {\r\n      const stringifiedState = JSON.stringify(data);\r\n\r\n      localStorage.setItem(`${type}-${key}`, stringifiedState);\r\n    } catch {\r\n      return;\r\n    }\r\n  }\r\n\r\n  public deleteLabelCache(repoName: string) {\r\n    try {\r\n      const type: TypeCache = 'label';\r\n\r\n      localStorage.removeItem(`${type}-${repoName}`);\r\n    } catch (err) {\r\n      return;\r\n    }\r\n  }\r\n\r\n  public deleteRepoFromStorage(repoToBeDeleted: string) {\r\n    try {\r\n      const reposData = this.loadFromCache('repo', 'all');\r\n\r\n      const reposUpdated = reposData.filter((repo: string) => {\r\n        return repo !== repoToBeDeleted;\r\n      });\r\n\r\n      this.saveToCache('repo', 'all', reposUpdated);\r\n    } catch {\r\n      return;\r\n    }\r\n  }\r\n}\r\n\r\nconst localStorageService: CacheService = new LocalStorageService();\r\n\r\nexport default localStorageService;\r\n","import axios, { AxiosError } from 'axios';\r\nimport { Dispatch } from 'redux';\r\n\r\nimport { cacheService } from 'core/cacheService';\r\nimport Label from 'core/models/Label';\r\nimport MESSAGES from 'data/messages';\r\nimport { setAlert } from './alertActions';\r\n\r\nexport const LABEL_REQUEST_START = 'LABEL_REQUEST_START';\r\nexport const LABEL_REQUEST_END = 'LABEL_REQUEST_END';\r\nexport const SET_LABELS = 'SET_LABELS';\r\nexport const DELETE_LABELS = 'DELETE_LABELS';\r\n\r\nexport const requestStart = () => (\r\n  { type: LABEL_REQUEST_START }\r\n);\r\n\r\nexport const requestEnd = () => (\r\n  { type: LABEL_REQUEST_END }\r\n);\r\n\r\nexport const setLabels = (repoName: string, labels: Label[]) => (\r\n  {\r\n    payload: { repoName, labels },\r\n    type: SET_LABELS,\r\n  }\r\n);\r\n\r\nexport const deleteLabels = (repoName: string) => (\r\n  {\r\n    payload: { repoName },\r\n    type: DELETE_LABELS,\r\n  }\r\n);\r\n\r\nexport const fetchLabels = (repoName: string, refreshCache: boolean = false) => (dispatch: Dispatch) => {\r\n  dispatch(requestStart());\r\n\r\n  const savedData = cacheService.loadFromCache('label', repoName);\r\n  const request = savedData && !refreshCache ? Promise.resolve(savedData) : fetchLabelsFromApi(repoName);\r\n\r\n  return request\r\n    .then(\r\n      (response: any) => {\r\n        dispatch(requestEnd());\r\n        cacheService.saveToCache('label', repoName, response);\r\n        const data: any[] = response.data;\r\n        const parsedResponseData: Label[] = data.map((data: any): Label => {\r\n          return {\r\n            color: data.color,\r\n            name: data.name,\r\n          };\r\n        });\r\n        dispatch(setLabels(repoName, parsedResponseData));\r\n      },\r\n      (error: AxiosError) => {\r\n        dispatch(requestEnd());\r\n        if (error.response && error.response.status === 404) {\r\n          dispatch(setAlert(MESSAGES.repositoryNotFound, 'error'));\r\n        }\r\n        console.log(MESSAGES.errorGeneric, error);\r\n      },\r\n    );\r\n};\r\n\r\nconst fetchLabelsFromApi = (repoName: string) => {\r\n  return axios.get(`https://api.github.com/repos/${repoName}/labels?per_page=100`);\r\n};\r\n","import { Dispatch } from 'redux';\r\n\r\nimport { fetchLabels } from './labelActions';\r\n\r\nexport const SELECT_LABEL = 'SELECT_LABEL';\r\nexport const SELECT_REPO = 'SELECT_REPO';\r\n\r\nexport const selectRepo = (repoName: string) => (dispatch: Dispatch<any>) => {\r\n  dispatch(fetchLabels(repoName));\r\n\r\n  dispatch({\r\n    payload: repoName,\r\n    type: SELECT_REPO,\r\n  });\r\n};\r\n\r\nexport const selectLabel = (repoName: string, labelName: string) => (\r\n  {\r\n    payload: {\r\n      label: labelName,\r\n      repo: repoName,\r\n    },\r\n    type: SELECT_LABEL,\r\n  }\r\n);\r\n","import axios from 'axios';\r\nimport { Dispatch } from 'redux';\r\n\r\nimport Issue from 'core/models/Issue';\r\nimport MESSAGES from 'data/messages';\r\nimport { selectLabel } from './uiActions';\r\n\r\nexport const ISSUE_REQUEST_START = 'ISSUE_REQUEST_START';\r\nexport const ISSUE_REQUEST_END = 'ISSUE_REQUEST_END';\r\nexport const GET_ISSUES = 'GET_ISSUES';\r\nexport const DELETE_ISSUES = 'DELETE_ISSUES';\r\n\r\nexport const requestStart = () => (\r\n  { type: ISSUE_REQUEST_START }\r\n);\r\n\r\nexport const requestEnd = () => (\r\n  { type: ISSUE_REQUEST_END }\r\n);\r\n\r\nexport const deleteIssues = (repoName: string) => (\r\n  {\r\n    payload: { repoName },\r\n    type: DELETE_ISSUES,\r\n  }\r\n);\r\n\r\nexport const getIssuesOfRepo = (repoName: string, issues: Issue[]) => (\r\n  {\r\n    payload: { repoName, issues },\r\n    type: GET_ISSUES,\r\n  }\r\n);\r\n\r\nexport const fetchIssues = (repo: string, labels: string) => (dispatch: Dispatch) => {\r\n  dispatch(requestStart());\r\n  dispatch(selectLabel(repo, labels));\r\n\r\n  return axios.get(`https://api.github.com/repos/${repo}/issues?labels=${labels}`)\r\n    .then(\r\n      (response: any) => {\r\n        dispatch(requestEnd());\r\n        const parsedResponseData: Issue[] = response.data.map((data: any): Issue => {\r\n          return {\r\n            comments: data.comments,\r\n            created_at: data.created_at,\r\n            title: data.title,\r\n            updated_at: data.updated_at,\r\n            url: data.html_url,\r\n          };\r\n        });\r\n        dispatch(getIssuesOfRepo(repo, parsedResponseData));\r\n      },\r\n      (error: string) => {\r\n        dispatch(requestEnd());\r\n        console.log(MESSAGES.errorGeneric, error);\r\n      },\r\n    );\r\n};\r\n","import { Dispatch } from 'redux';\r\n\r\nimport { cacheService } from 'core/cacheService';\r\nimport { AppState } from 'redux/reducers';\r\nimport { deleteIssues } from './issueActions';\r\nimport { deleteLabels } from './labelActions';\r\n\r\nexport const ADD_REPO = 'ADD_REPO';\r\nexport const DELETE_REPO = 'DELETE_REPO';\r\n\r\nexport const addRepo = (repoName: string) => (dispatch: Dispatch, getState: () => AppState) => {\r\n  dispatch({\r\n    payload: repoName,\r\n    type: ADD_REPO,\r\n  });\r\n\r\n  // getState().repos is a Set, so we need to transform it to an Array\r\n  cacheService.saveToCache('repo', 'all', Array.from(getState().repos));\r\n};\r\n\r\nexport const deleteRepo = (repoName: string) => (dispatch: Dispatch) => {\r\n  dispatch({\r\n    payload: repoName,\r\n    type: DELETE_REPO,\r\n  });\r\n\r\n  dispatch(deleteLabels(repoName));\r\n  dispatch(deleteIssues(repoName));\r\n  cacheService.deleteRepoFromStorage(repoName);\r\n  cacheService.deleteLabelCache(repoName);\r\n};\r\n","import { faCheck, faExclamation, faInfo, faTimes } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport styled from 'styled-components';\r\n\r\nimport AlertType from 'core/models/AlertType';\r\nimport { alertActions } from 'redux/actions';\r\nimport { AppState } from 'redux/reducers';\r\n\r\nconst StyledAlert = styled.div<{ type: AlertType }>`\r\n  background: ${(props) => props.type === 'error' ? '#cb403c' : (props.type === 'info' ? 'blue' : 'green')};\r\n  border-radius: 4px;\r\n  box-shadow: 0 3px 6px rgba(0, 0, 0, 0.16), 0 3px 6px rgba(0, 0, 0, 0.23);\r\n  display: flex;\r\n  font-weight: 600;\r\n  margin: 0 1.5rem;\r\n  min-height: 50px;\r\n  min-width: 250px;\r\n  max-width: 400px;\r\n  position: absolute;\r\n  right: 0;\r\n  top: 2.5rem;\r\n  z-index: 10;\r\n`;\r\n\r\nconst AlertIcon = styled.div`\r\n  align-items: center;\r\n  background-color: rgba(0, 0, 0, 0.15);\r\n  display: flex;\r\n  flex-grow: 0;\r\n  font-size: 1.5rem;\r\n  padding: 0.5rem 1rem;\r\n`;\r\n\r\nconst AlertContent = styled.div`\r\n  padding: 1rem;\r\n  flex-grow: 10;\r\n`;\r\n\r\nconst AlertHeader = styled.h3`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  margin-bottom: 0.25rem !important;\r\n  text-transform: uppercase;\r\n`;\r\n\r\nconst CloseButtonContainer = styled.div`\r\n  background-color: rgba(255, 255, 255, 0);\r\n  border-radius: 2px;\r\n  cursor: pointer;\r\n  padding: 0 5px;\r\n  transition: 0.2s background-color;\r\n\r\n  :hover, :focus {\r\n    background-color: rgba(255, 255, 255, 0.1);\r\n  }\r\n\r\n  :active {\r\n    background-color: rgba(255, 255, 255, 0.2);\r\n  }\r\n`;\r\n\r\nconst mapStateToProps = (state: AppState) => {\r\n  return {\r\n    alert: state.alert,\r\n  };\r\n};\r\n\r\nconst Alert: React.FC<any> = ({ alert, hideAlert }) => {\r\n  if (!alert.isOn) {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <StyledAlert type={alert.type}>\r\n      <AlertIcon>\r\n        <FontAwesomeIcon icon={alert.type === 'error' ? faExclamation : (alert.type === 'info' ? faInfo : faCheck)} />\r\n      </AlertIcon>\r\n      <AlertContent>\r\n        <AlertHeader>\r\n          { alert.type }\r\n          <CloseButtonContainer data-testid='close' onClick={hideAlert}>\r\n            <FontAwesomeIcon icon={faTimes} />\r\n          </CloseButtonContainer>\r\n        </AlertHeader>\r\n        <div data-testid='alertText'>\r\n          { alert.text }\r\n        </div>\r\n      </AlertContent>\r\n    </StyledAlert>\r\n  );\r\n};\r\n\r\nexport default connect(mapStateToProps, {\r\n  hideAlert: alertActions.hideAlert,\r\n})(Alert);\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nimport { Instruction } from '../InstructionScreen';\r\n\r\nconst StyledStep = styled.div`\r\n  align-items: center;\r\n  display: flex;\r\n  position: relative;\r\n`;\r\n\r\nconst StyledStepContent = styled.div`\r\n  background: #201919;\r\n  border-radius: 2px;\r\n  border-top: 5px solid #5833CA;\r\n  box-shadow: 0px 0px 4px rgba(0, 0, 0, 0.25);\r\n  display: flex;\r\n  flex-direction: column;\r\n  font-size: 1.5rem;\r\n  height: 150px;\r\n  justify-content: center;\r\n  margin: 1.5rem 0;\r\n  padding: 15px;\r\n  text-align: center;\r\n  width: 225px;\r\n`;\r\n\r\nconst StyledStepNumber = styled.div`\r\n  background: rgba(32, 25, 25, 0.5);\r\n  border-radius: 5px;\r\n  font-size: 3.5rem;\r\n  left: 5px;\r\n  padding: 40px 20px 40px 15px;\r\n  position: relative;\r\n`;\r\n\r\nconst StyledStepTitle = styled.h3`\r\n  text-transform: uppercase;\r\n`;\r\n\r\nconst StyledStepDetails = styled.div`\r\n  font-size: 1rem;\r\n`;\r\n\r\nconst StepInstruction: React.FC<{ i: number, instruction: Instruction }> = ({ i, instruction }) => {\r\n  return (\r\n    <StyledStep>\r\n      <StyledStepNumber>{i}</StyledStepNumber>\r\n      <StyledStepContent>\r\n        <StyledStepTitle>{instruction.title}</StyledStepTitle>\r\n        <StyledStepDetails>\r\n          <div>{instruction.text}</div>\r\n          <div>{instruction.example}</div>\r\n        </StyledStepDetails>\r\n      </StyledStepContent>\r\n    </StyledStep>\r\n  );\r\n};\r\n\r\nexport default StepInstruction;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nimport StepInstruction from './StepInstruction/StepInstruction';\r\n\r\nexport interface Instruction {\r\n  example: string;\r\n  text: string;\r\n  title: string;\r\n}\r\n\r\nconst instructions: Instruction[] = [\r\n  {\r\n    example: 'Example: facebook/react',\r\n    text: 'Add the GitHub repositories you want to track.',\r\n    title: 'Repository',\r\n  },\r\n  {\r\n    example: 'Example: \"Help wanted\"',\r\n    text: 'For each repo, select the label you want to check.',\r\n    title: 'Labels',\r\n  },\r\n  {\r\n    example: '',\r\n    text: 'Check the details of the last 30 issues for that label, like comments, title and date.',\r\n    title: 'Issues',\r\n  },\r\n];\r\n\r\nconst StyledInstructionScreen = styled.div`\r\n  align-items: center;\r\n  display: flex;\r\n  flex-direction: column;\r\n  height: 100%;\r\n  justify-content: center;\r\n`;\r\n\r\nconst InstructionScreen: React.FC<{ instructions?: Instruction[] }> = ({ instructions }) => {\r\n  return (\r\n    <StyledInstructionScreen data-testid='instructions'>\r\n      {instructions!.map((instruction: Instruction, i: number) => (\r\n        <StepInstruction key={i} i={i + 1} instruction={instruction} />\r\n      ))}\r\n    </StyledInstructionScreen>\r\n  );\r\n};\r\n\r\nInstructionScreen.defaultProps = { instructions };\r\n\r\nexport default InstructionScreen;\r\n","import styled from 'styled-components';\r\n\r\ninterface FlexProperties {\r\n  alignItems?: 'initial' | 'flex-start' | 'flex-end' | 'center' | 'baseline' | 'stretch';\r\n  margin?: string;\r\n  justifyContent?: 'center' | 'start' | 'end' | 'flex-start' | 'flex-end' | 'space-between'\r\n    | 'space-around' | 'space-evenly' | 'stretch';\r\n  flexDirection?: 'row' | 'row-reverse' | 'column' | 'column-reverse';\r\n}\r\n\r\nconst FlexContainer = styled.div<FlexProperties>`\r\n  align-items: ${(props) => props.alignItems || 'initial'};\r\n  display: flex;\r\n  margin: ${(props) => props.margin || '0'};\r\n  justify-content: ${(props) => props.justifyContent || 'initial'};\r\n  flex-direction: ${(props) => props.flexDirection || 'row'};\r\n`;\r\n\r\nexport default FlexContainer;\r\n","import styled, { keyframes } from 'styled-components';\r\n\r\nconst rotate = keyframes`\r\n  from {\r\n    transform: rotate(0deg);\r\n  }\r\n\r\n  to {\r\n    transform: rotate(360deg);\r\n  }\r\n`;\r\n\r\nconst LoadingSpinner = styled.div`\r\n  width: 80px;\r\n  height: 80px;\r\n  position: relative;\r\n\r\n  &,\r\n  ::before,\r\n  ::after {\r\n    background: transparent;\r\n    border-radius: 50%;\r\n    border-style: solid;\r\n    border-color: transparent;\r\n    border-top-color: #DADADA;\r\n    border-width: 6px;\r\n\r\n    animation: ${rotate} 4s linear infinite;\r\n  }\r\n\r\n  ::before {\r\n    content: '';\r\n    width: calc(80px - 6px * 2);\r\n    height: calc(80px - 6px * 2);\r\n    position: absolute;\r\n    margin: 0px;\r\n    animation-duration: 3s;\r\n  }\r\n\r\n  ::after {\r\n    content: '';\r\n    width: calc(80px - 6px * 4);\r\n    height: calc(80px - 6px * 4);\r\n    position: absolute;\r\n    margin: 6px;\r\n    animation-duration: 2s;\r\n  }\r\n`;\r\n\r\nexport default LoadingSpinner;\r\n","import styled from 'styled-components';\r\n\r\nconst SectionTitle = styled.h3`\r\n  color: rgba(255, 255, 255, 0.3);\r\n  margin: 0;\r\n  margin-right: 1rem;\r\n  text-transform: uppercase;\r\n  white-space: nowrap;\r\n`;\r\n\r\nexport default SectionTitle;\r\n","export function formatTime(time: string) {\r\n  const datetime = new Date(time);\r\n\r\n  const year = datetime.getFullYear();\r\n  const month = appendLeadingZeroes(datetime.getMonth() + 1);\r\n  const day = appendLeadingZeroes(datetime.getDate());\r\n\r\n  return `${year}-${month}-${day}`;\r\n}\r\n\r\nfunction appendLeadingZeroes(n: number) {\r\n  if (n <= 9) {\r\n    return `0${n}`;\r\n  }\r\n\r\n  return n;\r\n}\r\n","import styled from 'styled-components';\r\n\r\nconst Badge = styled.div<{ active?: boolean }>`\r\n  align-content: center;\r\n  background-color: ${(props) => props.active ? '#5833CA' : '#4F4F4F'};\r\n  border-radius: 20px;\r\n  display: flex;\r\n  font-weight: bold;\r\n  justify-content: center;\r\n  padding: 0.25rem;\r\n  text-shadow: 0px 1px 1px #000000;\r\n  width: 38px;\r\n\r\n  & svg {\r\n    filter: drop-shadow(1px 1px 0 #000);\r\n  }\r\n`;\r\n\r\nexport default Badge;\r\n","import { faCommentDots } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nimport Badge from 'shared/Badge';\r\nimport FlexContainer from 'shared/FlexContainer';\r\n\r\nconst StyledIssueCommentsBadge = styled(Badge)`\r\n  display: block;\r\n  background-color: #023DA0;\r\n  min-width: 42px;\r\n  padding: 0.25rem 0.5rem;\r\n  width: auto;\r\n`;\r\n\r\nconst StyleIcon = styled(FontAwesomeIcon)`\r\n  && {\r\n    margin-right: 0.5rem;\r\n  }\r\n`;\r\n\r\nconst IssueCommentsBadge: React.FC<{ numOfComments: number }> = ({ numOfComments }) => {\r\n  return (\r\n    <FlexContainer alignItems='center' data-testid='comments'>\r\n      <StyledIssueCommentsBadge>\r\n        <StyleIcon icon={faCommentDots} />\r\n        <span>{numOfComments}</span>\r\n      </StyledIssueCommentsBadge>\r\n    </FlexContainer>\r\n  );\r\n};\r\n\r\nexport default IssueCommentsBadge;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nimport { formatTime } from 'core/helpers';\r\nimport Issue from 'core/models/Issue';\r\nimport IssueCommentsBadge from './IssueCommentsBadge';\r\n\r\nconst StyledIssueItem = styled.div`\r\n  align-content: center;\r\n  background-color: #201919;\r\n  border-radius: 5px;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  margin: 0.75rem 0;\r\n  padding: 1rem 1.5rem;\r\n`;\r\n\r\nconst StyledIssueName = styled.a`\r\n  color: #DADADA;\r\n  display: block;\r\n  font-size: 1.2rem;\r\n  font-weight: bold;\r\n  margin-bottom: 0.5rem;\r\n\r\n  :hover {\r\n    color: #5833CA;\r\n  }\r\n`;\r\n\r\nconst StyledMarginRight = styled.span`\r\n  margin-right: 1rem;\r\n`;\r\n\r\nconst IssueDetails: React.FC<{ issue: Issue }> = ({ issue }) => {\r\n  return (\r\n    <StyledIssueItem key={issue.url}>\r\n      <div>\r\n        <StyledIssueName href={issue.url}>{issue.title}</StyledIssueName>\r\n        <div>\r\n          <StyledMarginRight>\r\n            <em>Updated at</em> <strong>{formatTime(issue.updated_at)}</strong>\r\n          </StyledMarginRight>\r\n          <span>\r\n            <em>Created at</em> <strong>{formatTime(issue.created_at)}</strong>\r\n          </span>\r\n        </div>\r\n      </div>\r\n      <IssueCommentsBadge numOfComments={issue.comments} />\r\n    </StyledIssueItem>\r\n  );\r\n};\r\n\r\nexport default IssueDetails;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nimport Issue from 'core/models/Issue';\r\nimport FlexContainer from 'shared/FlexContainer';\r\nimport LoadingSpinner from 'shared/LoadingSpinner';\r\nimport SectionTitle from 'shared/SectionTitle';\r\nimport IssueDetails from '../IssueDetails/IssueDetails';\r\n\r\nconst StyledLabelTitle = styled.h2`\r\n  font-weight: normal;\r\n  margin: 0;\r\n  margin-bottom: 1.5rem;\r\n  text-transform: uppercase;\r\n`;\r\n\r\nconst ListHeader: React.FC<any> = ({ issues, selectedRepo, selectedLabel }) => (\r\n  <React.Fragment>\r\n    <StyledLabelTitle>{selectedLabel}</StyledLabelTitle>\r\n    <FlexContainer alignItems='center' margin='0.5rem 0 1.5rem'>\r\n      <SectionTitle as='h2'>\r\n        Issues{ issues.isFetching\r\n          ? null\r\n          : ` (${issues.data[selectedRepo] ? issues.data[selectedRepo].length : 0})`\r\n        }\r\n      </SectionTitle>\r\n      <div className='divider-middle'></div>\r\n    </FlexContainer>\r\n  </React.Fragment>\r\n);\r\n\r\nconst LoadingContainer: React.FC = () => (\r\n  <FlexContainer alignItems='center' justifyContent='center' flexDirection='column' margin='2.5rem 0 1.5rem'\r\n    data-testid='loadingIssues'\r\n  >\r\n    <LoadingSpinner />\r\n    <h3>Loading...</h3>\r\n  </FlexContainer>\r\n);\r\n\r\nconst IssueList: React.FC<any> = ({ issues, selectedRepo, selectedLabel }) => (\r\n  <div>\r\n    <ListHeader issues={issues} selectedRepo={selectedRepo} selectedLabel={selectedLabel} />\r\n    { issues.isFetching\r\n      ? <LoadingContainer />\r\n      : <div data-testid='issueList'>\r\n          {issues.data[selectedRepo].map((issue: Issue) => <IssueDetails key={issue.url} issue={issue} />)}\r\n        </div>\r\n    }\r\n  </div>\r\n);\r\n\r\nexport default IssueList;\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport styled from 'styled-components';\r\n\r\nimport { AppState } from 'redux/reducers';\r\nimport InstructionScreen from './InstructionScreen/InstructionScreen';\r\nimport IssueList from './IssueList/IssueList';\r\n\r\nconst StyledMain = styled.div`\r\n  flex-grow: 2;\r\n  overflow: auto;\r\n  padding: 1.5rem;\r\n`;\r\n\r\nconst mapStateToProps = (state: AppState) => {\r\n  return {\r\n    issues: state.issues,\r\n    selectedLabels: state.ui.selectedLabels,\r\n    selectedRepo: state.ui.selectedRepo,\r\n  };\r\n};\r\n\r\nconst MainContent: React.FC<any> = ({ issues, selectedRepo, selectedLabels }) => (\r\n  <StyledMain>\r\n    {(issues.isFetching || issues.data[selectedRepo])\r\n      ? <IssueList selectedRepo={selectedRepo} issues={issues} selectedLabel={selectedLabels[selectedRepo]} />\r\n      : <InstructionScreen />\r\n    }\r\n  </StyledMain>\r\n);\r\n\r\nexport default connect(mapStateToProps)(MainContent);\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst StyledVerticalDivider = styled.div`\r\n  background-color: rgba(255, 255, 255, 0.1);\r\n  height: 100%;\r\n  min-width: 3px;\r\n  width: 3px;\r\n`;\r\n\r\nconst Divider: React.FC = () => {\r\n  return (\r\n    <StyledVerticalDivider />\r\n  );\r\n};\r\n\r\nexport default Divider;\r\n","import styled from 'styled-components';\r\n\r\nconst SideMenuSection = styled.div`\r\n  overflow: auto;\r\n  padding: 1.5rem;\r\n  width: 100%;\r\n`;\r\n\r\nexport default SideMenuSection;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\ninterface LabelBadgeTypes {\r\n  active?: boolean;\r\n  color?: string;\r\n}\r\n\r\nconst StyledLabelBadge = styled.div<LabelBadgeTypes>`\r\n  background-color: #2e2727;\r\n  border-radius: 3px;\r\n  border-width: 3px;\r\n  border-style: solid;\r\n  border-color: ${(props) => props.active ? '#' + (props.color || '#c7def8') : '#2e2727'};\r\n  border-top-color: ${(props) => props.color ? '#' + props.color : '#c7def8'};\r\n  cursor: pointer;\r\n  font-weight: ${(props) => props.active ? '600' : 'normal'};\r\n  margin: 1rem 0;\r\n  padding: 0.5rem 1rem;\r\n  transition: 0.3s background-color;\r\n`;\r\n\r\nconst LabelBadge: React.FC<any> = ({ repo, label, fetchIssuesWithLabel }) => {\r\n  return (\r\n    <StyledLabelBadge data-testid='labelItem' color={label.color}\r\n      onClick={() => fetchIssuesWithLabel(repo, label.name)}\r\n    >\r\n      {label.name}\r\n    </StyledLabelBadge>\r\n  );\r\n};\r\n\r\nexport default LabelBadge;\r\n","import React from 'react';\r\n\r\nimport Label from 'core/models/Label';\r\nimport LabelBadge from '../LabelBadge/LabelBadge';\r\n\r\nconst LabelList: React.FC<any> = ({ fetchIssues, selectedRepo, labels}) => {\r\n  if (!labels.data[selectedRepo]) {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n      {labels.data[selectedRepo].map((label: Label) => {\r\n        return <LabelBadge key={label.name} label={label} repo={selectedRepo} fetchIssuesWithLabel={fetchIssues} />;\r\n      }) }\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default LabelList;\r\n","import { faExclamation } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst StyledLabelSectionEmpty = styled.div`\r\n  align-items: center;\r\n  background-color: #2E2727;\r\n  border-radius: 5px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  margin: 2.5rem 0 1.5rem;\r\n  padding: 2.5rem 1rem;\r\n  text-align: center;\r\n`;\r\n\r\nconst StyledIcon = styled.div`\r\n  align-items: center;\r\n  border: 3px solid #558eec;\r\n  border-radius: 50%;\r\n  color: #558eec;\r\n  display: flex;\r\n  justify-content: center;\r\n  height: 50px;\r\n  padding: 1rem;\r\n  width: 50px;\r\n`;\r\n\r\nconst StyledMessage = styled.div`\r\n  margin: 1rem 0;\r\n`;\r\n\r\nconst LabelSectionEmpty: React.FC = () => {\r\n  return (\r\n    <StyledLabelSectionEmpty>\r\n      <StyledIcon><FontAwesomeIcon icon={faExclamation} size='2x' /></StyledIcon>\r\n      <StyledMessage><h3>We didn't find any labels for this repository!</h3></StyledMessage>\r\n      <div>Please check if the repository name is correct and your internet connection is stable.</div>\r\n    </StyledLabelSectionEmpty>\r\n  );\r\n};\r\n\r\nexport default LabelSectionEmpty;\r\n","import styled from 'styled-components';\r\n\r\nconst CircularButton = styled.button`\r\n  background: none;\r\n  border: none;\r\n  border-radius: 50%;\r\n  color: #DADADA;\r\n  cursor: pointer;\r\n  height: 30px;\r\n  padding: 0.5rem;\r\n  transition: 0.3s background-color;\r\n  width: 30px;\r\n\r\n  :hover,\r\n  :focus {\r\n    background-color: rgba(255, 255, 255, 0.08);\r\n  }\r\n\r\n  :active {\r\n    background-color: rgba(255, 255, 255, 0.12);\r\n  }\r\n\r\n  i {\r\n    margin: 0;\r\n  }\r\n`;\r\n\r\nexport default CircularButton;\r\n","import { faRedo } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nimport CircularButton from 'shared/CircularButton';\r\n\r\nconst StyledLabelSectionHeader = styled.div`\r\n  align-items: center;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  margin-top: 1rem;\r\n`;\r\n\r\nconst StyledRepoTitle = styled.h2`\r\n  font-weight: normal;\r\n  margin: 0;\r\n  margin-right: 0.5rem;\r\n  text-transform: uppercase;\r\n`;\r\n\r\nconst LabelSectionHeader: React.FC<any> = ({ fetchLabels, selectedRepo }) => {\r\n  return (\r\n    <StyledLabelSectionHeader>\r\n      <StyledRepoTitle>{selectedRepo}</StyledRepoTitle>\r\n      <CircularButton data-testid='refreshLabels' onClick={() => fetchLabels(selectedRepo, true)}>\r\n        <FontAwesomeIcon icon={faRedo} />\r\n      </CircularButton>\r\n    </StyledLabelSectionHeader>\r\n  );\r\n};\r\n\r\nexport default LabelSectionHeader;\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { issueActions, labelActions } from 'redux/actions';\r\nimport { AppState } from 'redux/reducers';\r\nimport FlexContainer from 'shared/FlexContainer';\r\nimport LoadingSpinner from 'shared/LoadingSpinner';\r\nimport SectionTitle from 'shared/SectionTitle';\r\nimport SideMenuSection from '../SideMenuSection';\r\nimport LabelList from './LabelList/LabelList';\r\nimport LabelSectionEmpty from './LabelSectionEmpty/LabelSectionEmpty';\r\nimport LabelSectionHeader from './LabelSectionHeader/LabelSectionHeader';\r\n\r\nconst mapStateToProps = (state: AppState) => {\r\n  return {\r\n    labels: state.labels,\r\n    selectedRepo: state.ui.selectedRepo,\r\n  };\r\n};\r\n\r\nconst LabelSection: React.FC<any> = ({ fetchLabels, fetchIssues, labels, selectedRepo }) => {\r\n  if (labels.isFetching) {\r\n    return (\r\n      <SideMenuSection>\r\n        <LabelSectionHeader fetchLabels={fetchLabels} selectedRepo={selectedRepo} />\r\n        <FlexContainer alignItems='center' justifyContent='center' flexDirection='column' margin='2.5rem 0 1.5rem'\r\n          data-testid='loadingLabels'\r\n        >\r\n          <LoadingSpinner />\r\n          <h3>Loading...</h3>\r\n        </FlexContainer>\r\n      </SideMenuSection>\r\n    );\r\n  }\r\n\r\n  if (!labels.data[selectedRepo] || labels.data[selectedRepo].length === 0) {\r\n    return (\r\n      <SideMenuSection data-testid='labelListEmpty'>\r\n        <LabelSectionHeader fetchLabels={fetchLabels} selectedRepo={selectedRepo} />\r\n        <LabelSectionEmpty />\r\n      </SideMenuSection>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <SideMenuSection data-testid='labelList'>\r\n      <LabelSectionHeader fetchLabels={fetchLabels} selectedRepo={selectedRepo} />\r\n      <FlexContainer alignItems='center' margin='1.5rem 0'>\r\n        <SectionTitle>Labels ({labels.data[selectedRepo] ? labels.data[selectedRepo].length : 0})</SectionTitle>\r\n        <div className='divider-middle'></div>\r\n      </FlexContainer>\r\n      <LabelList fetchIssues={fetchIssues} selectedRepo={selectedRepo} labels={labels} />\r\n    </SideMenuSection>\r\n  );\r\n};\r\n\r\nexport default connect(mapStateToProps, {\r\n  fetchIssues: issueActions.fetchIssues,\r\n  fetchLabels: labelActions.fetchLabels,\r\n})(LabelSection);\r\n","import styled from 'styled-components';\r\n\r\nconst StyledInput = styled.input`\r\n  background: none;\r\n  border: 2px solid rgba(255, 255, 255, 0.3);\r\n  border-radius: 20px;\r\n  color: rgba(255, 255, 255, 0.3);\r\n  font-size: 1.1rem;\r\n  max-width: 300px;\r\n  padding: .7rem 1rem;\r\n  transition: 0.3s all;\r\n  width: 100%;\r\n\r\n  :hover {\r\n    border: 2px solid rgba(255, 255, 255, 0.7);\r\n    color: rgba(255, 255, 255, 0.7);\r\n  }\r\n\r\n  :focus,\r\n  :active {\r\n    border: 2px solid #DADADA;\r\n    color: #DADADA;\r\n  }\r\n`;\r\n\r\nexport default StyledInput;\r\n","import React, { SyntheticEvent, useState } from 'react';\r\nimport styled from 'styled-components';\r\n\r\nimport StyledInput from 'shared/StyledInput';\r\n\r\nconst StyledForm = styled.form`\r\n  display: flex;\r\n  justify-content: center;\r\n  margin-top: 1rem;\r\n  width: 100%;\r\n`;\r\n\r\nconst AddRepoForm: React.FC<any> = ({ addRepo, selectRepo }) => {\r\n  const [repoName, setRepoName] = useState<string>('axios/axios');\r\n\r\n  const onAddRepo = (event: SyntheticEvent) => {\r\n    event.preventDefault();\r\n    const repoNameWithoutSpaces = repoName.replace(/\\s+/g, '');\r\n    addRepo(repoNameWithoutSpaces);\r\n    selectRepo(repoNameWithoutSpaces);\r\n    setRepoName('');\r\n  };\r\n\r\n  return (\r\n    <StyledForm onSubmit={onAddRepo} data-testid='addRepo'>\r\n      <StyledInput value={repoName} placeholder='Repository name <org/repo>'\r\n        onChange={(e) => setRepoName(e.target.value)}\r\n      />\r\n    </StyledForm>\r\n  );\r\n};\r\n\r\nexport default AddRepoForm;\r\n","import { faTrashAlt } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport React, { SyntheticEvent } from 'react';\r\nimport styled from 'styled-components';\r\n\r\nimport Badge from 'shared/Badge';\r\nimport CircularButton from 'shared/CircularButton';\r\nimport FlexContainer from 'shared/FlexContainer';\r\n\r\nconst DeleteButton = styled(CircularButton)<any>`\r\n  display: none;\r\n  background: rgba(182, 35, 35, 1);\r\n  font-size: 0.9rem;\r\n\r\n  :hover,\r\n  :focus {\r\n    background-color: rgba(182, 35, 35, 0.75);\r\n  }\r\n\r\n  :active {\r\n    background-color: rgba(182, 35, 35, 0.5);\r\n  }\r\n`;\r\n\r\nconst StyledRepoItem = styled.div<{ active?: boolean }>`\r\n  align-content: center;\r\n  background-color: ${(props) => props.active ? '#2E2727' : 'none'};\r\n  border-radius: 5px;\r\n  cursor: pointer;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  margin: 1rem 0;\r\n  padding: 0.5rem 1rem;\r\n  transition: 0.2s background-color;\r\n\r\n  :hover {\r\n    background-color: ${(props) => props.active ? '#2E2727' : 'rgba(46, 39, 39, 0.5)'};\r\n  }\r\n\r\n  :hover ${Badge} {\r\n    display: none;\r\n  }\r\n\r\n  :hover ${DeleteButton} {\r\n    display: block;\r\n  }\r\n`;\r\n\r\nconst StyledRepoName = styled.h4`\r\n  margin: 0.25rem 0;\r\n  text-transform: uppercase;\r\n`;\r\n\r\nconst StyledMutedText = styled.span`\r\n  color: rgba(255, 255, 255, 0.3);\r\n`;\r\n\r\nconst RepoItem: React.FC<any> = ({ numberOfIssues, repoName, deleteRepo, selectRepo, selectedRepo, selectedLabel }) => {\r\n  const isActive = selectedRepo === repoName;\r\n  return (\r\n    <StyledRepoItem data-testid='repoItem' active={isActive} onClick={() => selectRepo(repoName)}>\r\n      <div>\r\n        <StyledRepoName>{repoName}</StyledRepoName>\r\n        <em>\r\n          {selectedLabel || <StyledMutedText>No label selected</StyledMutedText>}\r\n        </em>\r\n      </div>\r\n      <FlexContainer alignItems='center' justifyContent='center'>\r\n        <DeleteButton aria-label='delete repo'\r\n          onClick={(e: SyntheticEvent) => { e.stopPropagation(); deleteRepo(repoName); }}\r\n        >\r\n          <FontAwesomeIcon icon={faTrashAlt} />\r\n        </DeleteButton>\r\n        <Badge active={isActive}>{numberOfIssues}</Badge>\r\n      </FlexContainer>\r\n    </StyledRepoItem>\r\n  );\r\n};\r\n\r\nexport default RepoItem;\r\n","import React from 'react';\r\n\r\nimport FlexContainer from 'shared/FlexContainer';\r\nimport SectionTitle from 'shared/SectionTitle';\r\nimport RepoItem from '../RepoItem/RepoItem';\r\n\r\nconst RepoList: React.FC<any> = ({ issues, repos, deleteRepo, selectRepo, selectedRepo, selectedLabels }) => {\r\n  const reposArray: string[] = [];\r\n\r\n  repos.forEach((repoName: string) => {\r\n    reposArray.push(repoName);\r\n  });\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <FlexContainer alignItems='center' margin='1.5rem 0 1rem'>\r\n        <SectionTitle>Repositories</SectionTitle>\r\n        <div className='divider-middle'></div>\r\n      </FlexContainer>\r\n      {\r\n        reposArray.map((repoName: string) => (\r\n          <RepoItem key={repoName} repoName={repoName}\r\n            deleteRepo={deleteRepo}\r\n            selectRepo={selectRepo}\r\n            selectedRepo={selectedRepo}\r\n            selectedLabel={selectedLabels[repoName]}\r\n            numberOfIssues={issues.data[repoName] ? issues.data[repoName].length : 0}\r\n          />\r\n        ))\r\n      }\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default RepoList;\r\n","import React from 'react';\r\n\r\nconst UserMenu: React.FC = () => {\r\n  return null;\r\n};\r\n\r\nexport default UserMenu;\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { issueActions, repoActions, uiActions } from 'redux/actions';\r\nimport { AppState } from 'redux/reducers';\r\n\r\nimport SideMenuSection from '../SideMenuSection';\r\nimport AddRepoForm from './AddRepoForm/AddRepoForm';\r\nimport RepoList from './RepoList/RepoList';\r\nimport UserMenu from './UserMenu/UserMenu';\r\n\r\nconst mapStateToProps = (state: AppState) => {\r\n  return {\r\n    issues: state.issues,\r\n    repos: state.repos,\r\n    selectedLabels: state.ui.selectedLabels,\r\n    selectedRepo: state.ui.selectedRepo,\r\n  };\r\n};\r\n\r\nconst RepoSection: React.FC<any> = ({\r\n  issues, repos, addRepo, deleteRepo, selectRepo, selectedRepo, selectedLabels,\r\n }) => {\r\n  return (\r\n    <SideMenuSection>\r\n      <UserMenu />\r\n      <AddRepoForm addRepo={addRepo} selectRepo={selectRepo} />\r\n      <RepoList\r\n        issues={issues}\r\n        repos={repos}\r\n        selectRepo={selectRepo}\r\n        selectedRepo={selectedRepo}\r\n        deleteRepo={deleteRepo}\r\n        selectedLabels={selectedLabels}\r\n      />\r\n    </SideMenuSection>\r\n  );\r\n};\r\n\r\nexport default connect(mapStateToProps, {\r\n  addRepo: repoActions.addRepo,\r\n  deleteRepo: repoActions.deleteRepo,\r\n  fetchIssues: issueActions.fetchIssues,\r\n  selectRepo: uiActions.selectRepo,\r\n})(RepoSection);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport styled from 'styled-components';\r\n\r\nimport { AppState } from 'redux/reducers';\r\nimport Divider from 'shared/Divider';\r\nimport LabelSection from './LabelSection/LabelSection';\r\nimport RepoSection from './RepoSection/RepoSection';\r\n\r\nconst StyledSideMenu = styled.div`\r\n  background-color: #201919;\r\n  box-shadow: 1px 1px 5px rgba(0, 0, 0, 0.25);\r\n  display: flex;\r\n  flex-shrink: 0;\r\n  height: 100%;\r\n  width: 650px;\r\n`;\r\n\r\nconst mapStateToProps = (state: AppState) => {\r\n  return {\r\n    selectedRepo: state.ui.selectedRepo,\r\n  };\r\n};\r\n\r\nconst SideMenu: React.FC<any> = ({ selectedRepo }) => {\r\n  return (\r\n    <StyledSideMenu>\r\n      <RepoSection />\r\n      {(selectedRepo)\r\n        ? (\r\n          <React.Fragment>\r\n            <Divider />\r\n            <LabelSection />\r\n          </React.Fragment>\r\n          )\r\n        : null\r\n      }\r\n    </StyledSideMenu>\r\n  );\r\n};\r\n\r\nexport default connect(mapStateToProps)(SideMenu);\r\n","import React from 'react';\r\n\r\nimport './App.css';\r\n\r\nimport Alert from 'components/TopLevel/Alert';\r\nimport MainContent from './components/MainContent/MainContent';\r\nimport SideMenu from './components/SideMenu/SideMenu';\r\n\r\nconst App: React.FC = () => {\r\n  return (\r\n    <div className='app'>\r\n      <Alert />\r\n      <SideMenu />\r\n      <MainContent />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import AlertType from 'core/models/AlertType';\r\nimport {\r\n  HIDE_ALERT,\r\n  SET_ALERT,\r\n} from '../actions/alertActions';\r\n\r\nconst initialState: {\r\n  type: AlertType,\r\n  text: string,\r\n  isOn: boolean,\r\n} = {\r\n  isOn: false,\r\n  text: '',\r\n  type: 'info',\r\n};\r\n\r\nconst alertReducer = (state = initialState, action: any) => {\r\n  switch (action.type) {\r\n    case SET_ALERT: {\r\n      const {text, type} = action.payload;\r\n      return {\r\n        isOn: true,\r\n        text,\r\n        type,\r\n      };\r\n    }\r\n    case HIDE_ALERT: {\r\n      return {\r\n        isOn: false,\r\n        text: '',\r\n        type: 'info',\r\n      };\r\n    }\r\n    default: {\r\n      return state;\r\n    }\r\n  }\r\n};\r\n\r\nexport default alertReducer;\r\n","import { combineReducers } from 'redux';\r\n\r\nimport Issue from 'core/models/Issue';\r\nimport {\r\n  DELETE_ISSUES,\r\n  GET_ISSUES,\r\n  ISSUE_REQUEST_END,\r\n  ISSUE_REQUEST_START,\r\n} from '../actions/issueActions';\r\n\r\nconst initialState: {\r\n  data: { [name: string]: Issue[] },\r\n  isFetching: boolean,\r\n} = {\r\n  data: {},\r\n  isFetching: false,\r\n};\r\n\r\nconst issueIsFetchingReducer = (state = initialState.isFetching, action: any) => {\r\n  switch (action.type) {\r\n    case ISSUE_REQUEST_START:\r\n      return true;\r\n    case ISSUE_REQUEST_END:\r\n      return false;\r\n    default: {\r\n      return state;\r\n    }\r\n  }\r\n};\r\n\r\nconst issueDataReducer = (state = initialState.data, action: any) => {\r\n  switch (action.type) {\r\n    case GET_ISSUES: {\r\n      return {\r\n        ...state,\r\n        [action.payload.repoName]: action.payload.issues,\r\n      };\r\n    }\r\n    case DELETE_ISSUES: {\r\n      const newState = { ...state };\r\n      delete newState[action.payload.repoName];\r\n      return newState;\r\n    }\r\n    default: {\r\n      return state;\r\n    }\r\n  }\r\n};\r\n\r\nexport default combineReducers({\r\n  data: issueDataReducer,\r\n  isFetching: issueIsFetchingReducer,\r\n});\r\n","import { combineReducers } from 'redux';\r\n\r\nimport Label from 'core/models/Label';\r\nimport {\r\n  DELETE_LABELS,\r\n  LABEL_REQUEST_END,\r\n  LABEL_REQUEST_START,\r\n  SET_LABELS,\r\n} from '../actions/labelActions';\r\n\r\nconst initialState: {\r\n  data: { [name: string]: Label },\r\n  isFetching: boolean,\r\n} = {\r\n  data: {},\r\n  isFetching: false,\r\n};\r\n\r\nconst labelIsFetchingReducer = (state = initialState.isFetching, action: any) => {\r\n  switch (action.type) {\r\n    case LABEL_REQUEST_START:\r\n      return true;\r\n    case LABEL_REQUEST_END:\r\n      return false;\r\n    default: {\r\n      return state;\r\n    }\r\n  }\r\n};\r\n\r\nconst labelDataReducer = (state = initialState.data, action: any) => {\r\n  switch (action.type) {\r\n    case SET_LABELS: {\r\n      return {\r\n        ...state,\r\n        [action.payload.repoName]: action.payload.labels,\r\n      };\r\n    }\r\n    case DELETE_LABELS: {\r\n      const newState = { ...state };\r\n      delete newState[action.payload.repoName];\r\n\r\n      return newState;\r\n    }\r\n    default: {\r\n      return state;\r\n    }\r\n  }\r\n};\r\n\r\nexport default combineReducers({\r\n  data: labelDataReducer,\r\n  isFetching: labelIsFetchingReducer,\r\n});\r\n","import {\r\n  ADD_REPO,\r\n  DELETE_REPO,\r\n} from '../actions/repoActions';\r\n\r\nconst repoReducer = (state: Set<string> = new Set(), action: any) => {\r\n  switch (action.type) {\r\n    case ADD_REPO: {\r\n      const newSet = new Set(state);\r\n      newSet.add(action.payload);\r\n\r\n      return newSet;\r\n    }\r\n    case DELETE_REPO: {\r\n      const newSet = new Set(state);\r\n\r\n      if (newSet.has(action.payload)) {\r\n        newSet.delete(action.payload);\r\n      }\r\n\r\n      return newSet;\r\n    }\r\n    default: {\r\n      return state;\r\n    }\r\n  }\r\n};\r\n\r\nexport default repoReducer;\r\n","import {\r\n  SELECT_LABEL,\r\n  SELECT_REPO,\r\n} from '../actions/uiActions';\r\n\r\nconst initialState = {\r\n  selectedLabels: {},\r\n  selectedRepo: '',\r\n};\r\n\r\nconst uiReducer = (state = initialState, action: any) => {\r\n  switch (action.type) {\r\n    case SELECT_REPO: {\r\n      return { ...state, selectedRepo: action.payload };\r\n    }\r\n    case SELECT_LABEL: {\r\n      return {\r\n        ...state,\r\n        selectedLabels: { [action.payload.repo]: action.payload.label },\r\n      };\r\n    }\r\n    default: {\r\n      return state;\r\n    }\r\n  }\r\n};\r\n\r\nexport default uiReducer;\r\n","import { combineReducers } from 'redux';\r\nimport alertReducer from './alertReducer';\r\nimport issueReducer from './issueReducer';\r\nimport labelReducer from './labelReducer';\r\nimport repoReducer from './repoReducer';\r\nimport uiReducer from './uiReducer';\r\n\r\nconst rootReducer = combineReducers({\r\n  alert: alertReducer,\r\n  issues: issueReducer,\r\n  labels: labelReducer,\r\n  repos: repoReducer,\r\n  ui: uiReducer,\r\n});\r\n\r\nexport type AppState = ReturnType<typeof rootReducer>;\r\n\r\nexport default rootReducer;\r\n","/* istanbul ignore file */\r\n\r\nimport { applyMiddleware, createStore  } from 'redux';\r\nimport thunkMiddleware from 'redux-thunk';\r\n\r\nimport { cacheService } from 'core/cacheService';\r\nimport rootReducer from '../reducers';\r\n\r\nconst persistedReposData = cacheService.loadFromCache('repo', 'all') || [];\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  {\r\n    repos: new Set(persistedReposData),\r\n  },\r\n  applyMiddleware(\r\n    thunkMiddleware,\r\n  ),\r\n);\r\n\r\nexport default store;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nimport 'assets/reset.css';\r\nimport \"typeface-lato\";\r\n\r\nimport App from './App';\r\nimport store from './redux/store';\r\n\r\nimport './index.css';\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById('root'),\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}